// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   ViewModel.tt
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Input;
using Controls=WPAppStudio.Controls;
using Entities=WPAppStudio.Entities;
using EntitiesBase=WPAppStudio.Entities.Base;
using IServices=WPAppStudio.Services.Interfaces;
using IViewModels=WPAppStudio.ViewModel.Interfaces;
using Localization=WPAppStudio.Localization;
using Repositories=WPAppStudio.Repositories;
using Services=WPAppStudio.Services;
using ViewModelsBase=WPAppStudio.ViewModel.Base;
using WPAppStudio;
using WPAppStudio.Shared;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of EditorialFeed_Detail ViewModel.
    /// </summary>
    [CompilerGenerated]
    [GeneratedCode("Radarc", "4.0")]
    public partial class EditorialFeed_DetailViewModel : ViewModelsBase.VMBase, IViewModels.IEditorialFeed_DetailViewModel, ViewModelsBase.INavigable
    {       

		private readonly Repositories.EditorialFeed_EditorialFeed _editorialFeed_EditorialFeed;
		private readonly IServices.IDialogService _dialogService;
		private readonly IServices.INavigationService _navigationService;
		private readonly IServices.ISpeechService _speechService;
		private readonly IServices.IShareService _shareService;
		private readonly IServices.ILiveTileService _liveTileService;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="EditorialFeed_DetailViewModel" /> class.
        /// </summary>
        /// <param name="editorialFeed_EditorialFeed">The Editorial Feed_ Editorial Feed.</param>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="speechService">The Speech Service.</param>
        /// <param name="shareService">The Share Service.</param>
        /// <param name="liveTileService">The Live Tile Service.</param>
        public EditorialFeed_DetailViewModel(Repositories.EditorialFeed_EditorialFeed editorialFeed_EditorialFeed, IServices.IDialogService dialogService, IServices.INavigationService navigationService, IServices.ISpeechService speechService, IServices.IShareService shareService, IServices.ILiveTileService liveTileService)
        {
			_editorialFeed_EditorialFeed = editorialFeed_EditorialFeed;
			_dialogService = dialogService;
			_navigationService = navigationService;
			_speechService = speechService;
			_shareService = shareService;
			_liveTileService = liveTileService;
        }
		
	
		private EntitiesBase.RssSearchResult _currentRssSearchResult;

        /// <summary>
        /// CurrentRssSearchResult property.
        /// </summary>		
        public EntitiesBase.RssSearchResult CurrentRssSearchResult
        {
            get
            {
				return _currentRssSearchResult;
            }
            set
            {
                SetProperty(ref _currentRssSearchResult, value);
            }
        }
	
		private bool _hasNextpanoramaEditorialFeed_Detail0;

        /// <summary>
        /// HasNextpanoramaEditorialFeed_Detail0 property.
        /// </summary>		
        public bool HasNextpanoramaEditorialFeed_Detail0
        {
            get
            {
				return _hasNextpanoramaEditorialFeed_Detail0;
            }
            set
            {
                SetProperty(ref _hasNextpanoramaEditorialFeed_Detail0, value);
            }
        }
	
		private bool _hasPreviouspanoramaEditorialFeed_Detail0;

        /// <summary>
        /// HasPreviouspanoramaEditorialFeed_Detail0 property.
        /// </summary>		
        public bool HasPreviouspanoramaEditorialFeed_Detail0
        {
            get
            {
				return _hasPreviouspanoramaEditorialFeed_Detail0;
            }
            set
            {
                SetProperty(ref _hasPreviouspanoramaEditorialFeed_Detail0, value);
            }
        }

        /// <summary>
        /// Delegate method for the TextToSpeechEditorialFeed_DetailStaticControlCommand command.
        /// </summary>
        public  void TextToSpeechEditorialFeed_DetailStaticControlCommandDelegate() 
        {
				_speechService.TextToSpeech(CurrentRssSearchResult.Title + " " + CurrentRssSearchResult.Content);
        }
		

        private ICommand _textToSpeechEditorialFeed_DetailStaticControlCommand;

        /// <summary>
        /// Gets the TextToSpeechEditorialFeed_DetailStaticControlCommand command.
        /// </summary>
        public ICommand TextToSpeechEditorialFeed_DetailStaticControlCommand
        {
            get { return _textToSpeechEditorialFeed_DetailStaticControlCommand = _textToSpeechEditorialFeed_DetailStaticControlCommand ?? new ViewModelsBase.DelegateCommand(TextToSpeechEditorialFeed_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the ShareEditorialFeed_DetailStaticControlCommand command.
        /// </summary>
        public  void ShareEditorialFeed_DetailStaticControlCommandDelegate() 
        {
				_shareService.Share(CurrentRssSearchResult.Title, CurrentRssSearchResult.Content, CurrentRssSearchResult.FeedUrl, CurrentRssSearchResult.ImageUrl);
        }
		

        private ICommand _shareEditorialFeed_DetailStaticControlCommand;

        /// <summary>
        /// Gets the ShareEditorialFeed_DetailStaticControlCommand command.
        /// </summary>
        public ICommand ShareEditorialFeed_DetailStaticControlCommand
        {
            get { return _shareEditorialFeed_DetailStaticControlCommand = _shareEditorialFeed_DetailStaticControlCommand ?? new ViewModelsBase.DelegateCommand(ShareEditorialFeed_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the PinToStartEditorialFeed_DetailStaticControlCommand command.
        /// </summary>
        public  void PinToStartEditorialFeed_DetailStaticControlCommandDelegate() 
        {
				_liveTileService.PinToStart(typeof(IViewModels.IEditorialFeed_DetailViewModel), CreateTileInfoEditorialFeed_DetailStaticControl());
        }
		

        private ICommand _pinToStartEditorialFeed_DetailStaticControlCommand;

        /// <summary>
        /// Gets the PinToStartEditorialFeed_DetailStaticControlCommand command.
        /// </summary>
        public ICommand PinToStartEditorialFeed_DetailStaticControlCommand
        {
            get { return _pinToStartEditorialFeed_DetailStaticControlCommand = _pinToStartEditorialFeed_DetailStaticControlCommand ?? new ViewModelsBase.DelegateCommand(PinToStartEditorialFeed_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the GoToSourceEditorialFeed_DetailStaticControlCommand command.
        /// </summary>
        public  void GoToSourceEditorialFeed_DetailStaticControlCommandDelegate() 
        {
				_navigationService.NavigateTo(string.IsNullOrEmpty(CurrentRssSearchResult.FeedUrl) ? null : new Uri(CurrentRssSearchResult.FeedUrl));
        }
		

        private ICommand _goToSourceEditorialFeed_DetailStaticControlCommand;

        /// <summary>
        /// Gets the GoToSourceEditorialFeed_DetailStaticControlCommand command.
        /// </summary>
        public ICommand GoToSourceEditorialFeed_DetailStaticControlCommand
        {
            get { return _goToSourceEditorialFeed_DetailStaticControlCommand = _goToSourceEditorialFeed_DetailStaticControlCommand ?? new ViewModelsBase.DelegateCommand(GoToSourceEditorialFeed_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the NextpanoramaEditorialFeed_Detail0 command.
        /// </summary>
        public async void NextpanoramaEditorialFeed_Detail0Delegate() 
        {
				LoadingCurrentRssSearchResult = true;
			var next = await  _editorialFeed_EditorialFeed.Next(CurrentRssSearchResult);

			if(next != null)
				CurrentRssSearchResult = next;

			RefreshHasPrevNext();
        }
		
		
        private bool _loadingCurrentRssSearchResult;
		
        public bool LoadingCurrentRssSearchResult
        {
            get { return _loadingCurrentRssSearchResult; }
            set { SetProperty(ref _loadingCurrentRssSearchResult, value); }
        }

        private ICommand _nextpanoramaEditorialFeed_Detail0;

        /// <summary>
        /// Gets the NextpanoramaEditorialFeed_Detail0 command.
        /// </summary>
        public ICommand NextpanoramaEditorialFeed_Detail0
        {
            get { return _nextpanoramaEditorialFeed_Detail0 = _nextpanoramaEditorialFeed_Detail0 ?? new ViewModelsBase.DelegateCommand(NextpanoramaEditorialFeed_Detail0Delegate); }
        }

        /// <summary>
        /// Delegate method for the PreviouspanoramaEditorialFeed_Detail0 command.
        /// </summary>
        public async void PreviouspanoramaEditorialFeed_Detail0Delegate() 
        {
				LoadingCurrentRssSearchResult = true;
			var prev = await  _editorialFeed_EditorialFeed.Previous(CurrentRssSearchResult);

			if(prev != null)
				CurrentRssSearchResult = prev;

			RefreshHasPrevNext();
        }
		

        private ICommand _previouspanoramaEditorialFeed_Detail0;

        /// <summary>
        /// Gets the PreviouspanoramaEditorialFeed_Detail0 command.
        /// </summary>
        public ICommand PreviouspanoramaEditorialFeed_Detail0
        {
            get { return _previouspanoramaEditorialFeed_Detail0 = _previouspanoramaEditorialFeed_Detail0 ?? new ViewModelsBase.DelegateCommand(PreviouspanoramaEditorialFeed_Detail0Delegate); }
        }

        private async void RefreshHasPrevNext()
        {
            HasPreviouspanoramaEditorialFeed_Detail0 = await _editorialFeed_EditorialFeed.HasPrevious(CurrentRssSearchResult);
			HasNextpanoramaEditorialFeed_Detail0 = await _editorialFeed_EditorialFeed.HasNext(CurrentRssSearchResult);
			LoadingCurrentRssSearchResult = false;
		}
		public object NavigationContext
        {
            set
            {              
                if (!(value is EntitiesBase.RssSearchResult)) { return; }
                
                CurrentRssSearchResult = value as EntitiesBase.RssSearchResult;
                RefreshHasPrevNext();
            }
        }
        /// <summary>
        /// Initializes a <see cref="Services.TileInfo" /> object for the EditorialFeed_DetailStaticControl control.
        /// </summary>
		/// <returns>A <see cref="Services.TileInfo" /> object.</returns>
        public Services.TileInfo CreateTileInfoEditorialFeed_DetailStaticControl()
        {
            var tileInfo = new Services.TileInfo
            {
                CurrentId = CurrentRssSearchResult.Title,
                Title = CurrentRssSearchResult.Title,
                BackTitle = CurrentRssSearchResult.Title,
                BackContent = CurrentRssSearchResult.Content,
                Count = 0,
                BackgroundImagePath = CurrentRssSearchResult.ImageUrl,
                BackBackgroundImagePath = CurrentRssSearchResult.ImageUrl,
                LogoPath = "Logo-242457de-80da-42c9-9fbb-98b5451c622c.png"
            };
            return tileInfo;
        }
    }
}
