// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   ViewModel.tt
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Input;
using Controls=WPAppStudio.Controls;
using Entities=WPAppStudio.Entities;
using EntitiesBase=WPAppStudio.Entities.Base;
using IServices=WPAppStudio.Services.Interfaces;
using IViewModels=WPAppStudio.ViewModel.Interfaces;
using Localization=WPAppStudio.Localization;
using Repositories=WPAppStudio.Repositories;
using Services=WPAppStudio.Services;
using ViewModelsBase=WPAppStudio.ViewModel.Base;
using WPAppStudio;
using WPAppStudio.Shared;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of Main_Detail ViewModel.
    /// </summary>
    [CompilerGenerated]
    [GeneratedCode("Radarc", "4.0")]
    public partial class Main_DetailViewModel : ViewModelsBase.VMBase, IViewModels.IMain_DetailViewModel, ViewModelsBase.INavigable
    {       

		private readonly Repositories.Main_mainrssfeed _main_mainrssfeed;
		private readonly IServices.IDialogService _dialogService;
		private readonly IServices.INavigationService _navigationService;
		private readonly IServices.ISpeechService _speechService;
		private readonly IServices.IShareService _shareService;
		private readonly IServices.ILiveTileService _liveTileService;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="Main_DetailViewModel" /> class.
        /// </summary>
        /// <param name="main_mainrssfeed">The Main_mainrssfeed.</param>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="speechService">The Speech Service.</param>
        /// <param name="shareService">The Share Service.</param>
        /// <param name="liveTileService">The Live Tile Service.</param>
        public Main_DetailViewModel(Repositories.Main_mainrssfeed main_mainrssfeed, IServices.IDialogService dialogService, IServices.INavigationService navigationService, IServices.ISpeechService speechService, IServices.IShareService shareService, IServices.ILiveTileService liveTileService)
        {
			_main_mainrssfeed = main_mainrssfeed;
			_dialogService = dialogService;
			_navigationService = navigationService;
			_speechService = speechService;
			_shareService = shareService;
			_liveTileService = liveTileService;
        }
		
	
		private EntitiesBase.RssSearchResult _currentRssSearchResult;

        /// <summary>
        /// CurrentRssSearchResult property.
        /// </summary>		
        public EntitiesBase.RssSearchResult CurrentRssSearchResult
        {
            get
            {
				return _currentRssSearchResult;
            }
            set
            {
                SetProperty(ref _currentRssSearchResult, value);
            }
        }
	
		private bool _hasNextpanoramaMain_Detail0;

        /// <summary>
        /// HasNextpanoramaMain_Detail0 property.
        /// </summary>		
        public bool HasNextpanoramaMain_Detail0
        {
            get
            {
				return _hasNextpanoramaMain_Detail0;
            }
            set
            {
                SetProperty(ref _hasNextpanoramaMain_Detail0, value);
            }
        }
	
		private bool _hasPreviouspanoramaMain_Detail0;

        /// <summary>
        /// HasPreviouspanoramaMain_Detail0 property.
        /// </summary>		
        public bool HasPreviouspanoramaMain_Detail0
        {
            get
            {
				return _hasPreviouspanoramaMain_Detail0;
            }
            set
            {
                SetProperty(ref _hasPreviouspanoramaMain_Detail0, value);
            }
        }

        /// <summary>
        /// Delegate method for the TextToSpeechMain_DetailStaticControlCommand command.
        /// </summary>
        public  void TextToSpeechMain_DetailStaticControlCommandDelegate() 
        {
				_speechService.TextToSpeech(CurrentRssSearchResult.Title + " " + CurrentRssSearchResult.Content);
        }
		

        private ICommand _textToSpeechMain_DetailStaticControlCommand;

        /// <summary>
        /// Gets the TextToSpeechMain_DetailStaticControlCommand command.
        /// </summary>
        public ICommand TextToSpeechMain_DetailStaticControlCommand
        {
            get { return _textToSpeechMain_DetailStaticControlCommand = _textToSpeechMain_DetailStaticControlCommand ?? new ViewModelsBase.DelegateCommand(TextToSpeechMain_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the ShareMain_DetailStaticControlCommand command.
        /// </summary>
        public  void ShareMain_DetailStaticControlCommandDelegate() 
        {
				_shareService.Share(CurrentRssSearchResult.Title, CurrentRssSearchResult.Content, CurrentRssSearchResult.FeedUrl, CurrentRssSearchResult.ImageUrl);
        }
		

        private ICommand _shareMain_DetailStaticControlCommand;

        /// <summary>
        /// Gets the ShareMain_DetailStaticControlCommand command.
        /// </summary>
        public ICommand ShareMain_DetailStaticControlCommand
        {
            get { return _shareMain_DetailStaticControlCommand = _shareMain_DetailStaticControlCommand ?? new ViewModelsBase.DelegateCommand(ShareMain_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the PinToStartMain_DetailStaticControlCommand command.
        /// </summary>
        public  void PinToStartMain_DetailStaticControlCommandDelegate() 
        {
				_liveTileService.PinToStart(typeof(IViewModels.IMain_DetailViewModel), CreateTileInfoMain_DetailStaticControl());
        }
		

        private ICommand _pinToStartMain_DetailStaticControlCommand;

        /// <summary>
        /// Gets the PinToStartMain_DetailStaticControlCommand command.
        /// </summary>
        public ICommand PinToStartMain_DetailStaticControlCommand
        {
            get { return _pinToStartMain_DetailStaticControlCommand = _pinToStartMain_DetailStaticControlCommand ?? new ViewModelsBase.DelegateCommand(PinToStartMain_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the GoToSourceMain_DetailStaticControlCommand command.
        /// </summary>
        public  void GoToSourceMain_DetailStaticControlCommandDelegate() 
        {
				_navigationService.NavigateTo(string.IsNullOrEmpty(CurrentRssSearchResult.FeedUrl) ? null : new Uri(CurrentRssSearchResult.FeedUrl));
        }
		

        private ICommand _goToSourceMain_DetailStaticControlCommand;

        /// <summary>
        /// Gets the GoToSourceMain_DetailStaticControlCommand command.
        /// </summary>
        public ICommand GoToSourceMain_DetailStaticControlCommand
        {
            get { return _goToSourceMain_DetailStaticControlCommand = _goToSourceMain_DetailStaticControlCommand ?? new ViewModelsBase.DelegateCommand(GoToSourceMain_DetailStaticControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the NextpanoramaMain_Detail0 command.
        /// </summary>
        public async void NextpanoramaMain_Detail0Delegate() 
        {
				LoadingCurrentRssSearchResult = true;
			var next = await  _main_mainrssfeed.Next(CurrentRssSearchResult);

			if(next != null)
				CurrentRssSearchResult = next;

			RefreshHasPrevNext();
        }
		
		
        private bool _loadingCurrentRssSearchResult;
		
        public bool LoadingCurrentRssSearchResult
        {
            get { return _loadingCurrentRssSearchResult; }
            set { SetProperty(ref _loadingCurrentRssSearchResult, value); }
        }

        private ICommand _nextpanoramaMain_Detail0;

        /// <summary>
        /// Gets the NextpanoramaMain_Detail0 command.
        /// </summary>
        public ICommand NextpanoramaMain_Detail0
        {
            get { return _nextpanoramaMain_Detail0 = _nextpanoramaMain_Detail0 ?? new ViewModelsBase.DelegateCommand(NextpanoramaMain_Detail0Delegate); }
        }

        /// <summary>
        /// Delegate method for the PreviouspanoramaMain_Detail0 command.
        /// </summary>
        public async void PreviouspanoramaMain_Detail0Delegate() 
        {
				LoadingCurrentRssSearchResult = true;
			var prev = await  _main_mainrssfeed.Previous(CurrentRssSearchResult);

			if(prev != null)
				CurrentRssSearchResult = prev;

			RefreshHasPrevNext();
        }
		

        private ICommand _previouspanoramaMain_Detail0;

        /// <summary>
        /// Gets the PreviouspanoramaMain_Detail0 command.
        /// </summary>
        public ICommand PreviouspanoramaMain_Detail0
        {
            get { return _previouspanoramaMain_Detail0 = _previouspanoramaMain_Detail0 ?? new ViewModelsBase.DelegateCommand(PreviouspanoramaMain_Detail0Delegate); }
        }

        private async void RefreshHasPrevNext()
        {
            HasPreviouspanoramaMain_Detail0 = await _main_mainrssfeed.HasPrevious(CurrentRssSearchResult);
			HasNextpanoramaMain_Detail0 = await _main_mainrssfeed.HasNext(CurrentRssSearchResult);
			LoadingCurrentRssSearchResult = false;
		}
		public object NavigationContext
        {
            set
            {              
                if (!(value is EntitiesBase.RssSearchResult)) { return; }
                
                CurrentRssSearchResult = value as EntitiesBase.RssSearchResult;
                RefreshHasPrevNext();
            }
        }
        /// <summary>
        /// Initializes a <see cref="Services.TileInfo" /> object for the Main_DetailStaticControl control.
        /// </summary>
		/// <returns>A <see cref="Services.TileInfo" /> object.</returns>
        public Services.TileInfo CreateTileInfoMain_DetailStaticControl()
        {
            var tileInfo = new Services.TileInfo
            {
                CurrentId = CurrentRssSearchResult.Title,
                Title = CurrentRssSearchResult.Title,
                BackTitle = CurrentRssSearchResult.Title,
                BackContent = CurrentRssSearchResult.Content,
                Count = 0,
                BackgroundImagePath = CurrentRssSearchResult.ImageUrl,
                BackBackgroundImagePath = CurrentRssSearchResult.ImageUrl,
                LogoPath = "Logo-242457de-80da-42c9-9fbb-98b5451c622c.png"
            };
            return tileInfo;
        }
    }
}
